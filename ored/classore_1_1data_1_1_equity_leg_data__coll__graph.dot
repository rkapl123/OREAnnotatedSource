digraph "EquityLegData"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{EquityLegData\n||+ EquityLegData()\l+ EquityLegData()\l+ returnType()\l+ eqName()\l+ dividendFactor()\l+ equityIdentifier()\l+ initialPrice()\l+ fixingDays()\l+ valuationSchedule()\l+ eqCurrency()\l+ fxIndex()\l+ notionalReset()\l+ quantity()\l+ initialPriceCurrency()\l* fromXML()\l* toXML()\l* returnType()\l* eqName()\l* dividendFactor()\l* equityIdentifier()\l* initialPrice()\l* fixingDays()\l* valuationSchedule()\l* eqCurrency()\l* fxIndex()\l* notionalReset()\l* quantity()\l* initialPriceCurrency()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Serializable Fixed Leg Data."];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{LegAdditionalData\n||+ LegAdditionalData()\l+ LegAdditionalData()\l+ legType()\l+ legNodeName()\l+ indices()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_leg_additional_data.html",tooltip="Serializable Additional Leg Data."];
  Node3 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{XMLSerializable\n||+ ~XMLSerializable()\l+ fromXML()\l+ toXML()\l+ fromFile()\l+ toFile()\l+ fromXMLString()\l+ toXMLString()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_x_m_l_serializable.html",tooltip="Base class for all serializable classes."];
  Node4 -> Node2 [color="grey25",style="solid",label=" #indices_" ,arrowhead="odiamond"];
  Node4 [label="{set\< std::string \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node5 [label="{string\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node5 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node6 [label="{basic_string\< Char \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node4 [dir="back",color="orange",style="solid",label=" \< std::string \>" ];
  Node7 [label="{set\< K \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node7 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node8 [label="{K\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node2 [color="grey25",style="solid",label=" -legNodeName_\n-legType_" ,arrowhead="odiamond"];
  Node9 -> Node1 [color="grey25",style="solid",label=" -returnType_" ,arrowhead="odiamond"];
  Node9 [label="{EquityReturnType\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node1 [color="grey25",style="solid",label=" -dividendFactor_\n-initialPrice_\n-quantity_" ,arrowhead="odiamond"];
  Node10 [label="{Real\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node1 [color="grey25",style="solid",label=" -equityUnderlying_" ,arrowhead="odiamond"];
  Node11 [label="{EquityUnderlying\n||+ EquityUnderlying()\l+ EquityUnderlying()\l+ EquityUnderlying()\l+ name()\l+ identifierType()\l+ currency()\l+ exchange()\l+ setEquityName()\l* fromXML()\l* toXML()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_equity_underlying.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node12 [label="{Underlying\n||+ Underlying()\l+ Underlying()\l+ fromXML()\l+ toXML()\l+ setType()\l+ setName()\l+ setWeight()\l+ setNodeName()\l+ setBasicUnderlyingNodeName()\l* type()\l* name()\l* weight()\l* fromXML()\l* toXML()\l* setType()\l* setName()\l* setWeight()\l* setNodeName()\l* setBasicUnderlyingNodeName()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_underlying.html",tooltip="Class to hold Underlyings."];
  Node3 -> Node12 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node5 -> Node12 [color="grey25",style="solid",label=" #basicUnderlyingNodeName\l_\n#name_\n#nodeName_\n#type_" ,arrowhead="odiamond"];
  Node10 -> Node12 [color="grey25",style="solid",label=" #weight_" ,arrowhead="odiamond"];
  Node13 -> Node12 [color="grey25",style="solid",label=" #isBasic_" ,arrowhead="odiamond"];
  Node13 [label="{bool\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classbool.html",tooltip=" "];
  Node5 -> Node11 [color="grey25",style="solid",label=" -currency_\n-equityName_\n-exchange_\n-identifierType_" ,arrowhead="odiamond"];
  Node13 -> Node1 [color="grey25",style="solid",label=" -notionalReset_" ,arrowhead="odiamond"];
  Node14 -> Node1 [color="grey25",style="solid",label=" -fixingDays_" ,arrowhead="odiamond"];
  Node14 [label="{Natural\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node15 -> Node1 [color="grey25",style="solid",label=" -valuationSchedule_" ,arrowhead="odiamond"];
  Node15 [label="{ScheduleData\n||+ ScheduleData()\l+ ScheduleData()\l+ ScheduleData()\l+ ScheduleData()\l+ addDates()\l+ addRules()\l+ addDerived()\l+ hasData()\l+ baseScheduleNames()\l+ dates()\l+ rules()\l+ derived()\l+ name()\l+ hasDerived()\l+ modifyDates()\l+ modifyRules()\l+ modifyDerived()\l* fromXML()\l* toXML()\l* dates()\l* rules()\l* derived()\l* name()\l* hasDerived()\l* modifyDates()\l* modifyRules()\l* modifyDerived()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_schedule_data.html",tooltip="Serializable schedule data."];
  Node3 -> Node15 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node16 -> Node15 [color="grey25",style="solid",label=" -dates_" ,arrowhead="odiamond"];
  Node16 [label="{vector\< ore::data::\lScheduleDates \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node17 -> Node16 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node17 [label="{ScheduleDates\n||+ ScheduleDates()\l+ ScheduleDates()\l+ hasData()\l+ calendar()\l+ convention()\l+ tenor()\l+ endOfMonth()\l+ endOfMonthConvention()\l+ dates()\l+ modifyDates()\l* fromXML()\l* toXML()\l* calendar()\l* convention()\l* tenor()\l* endOfMonth()\l* endOfMonthConvention()\l* dates()\l* modifyDates()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_schedule_dates.html",tooltip="Serializable object holding schedule Dates data."];
  Node3 -> Node17 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node5 -> Node17 [color="grey25",style="solid",label=" -calendar_\n-convention_\n-endOfMonthConvention\l_\n-endOfMonth_\n-tenor_" ,arrowhead="odiamond"];
  Node18 -> Node17 [color="grey25",style="solid",label=" -dates_" ,arrowhead="odiamond"];
  Node18 [label="{vector\< string \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node18 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node19 -> Node18 [dir="back",color="orange",style="solid",label=" \< string \>" ];
  Node19 [label="{vector\< T \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node20 -> Node19 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node20 [label="{T\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node17 [color="grey25",style="solid",label=" -was1T_" ,arrowhead="odiamond"];
  Node19 -> Node16 [dir="back",color="orange",style="solid",label=" \< ore::data::ScheduleDates \>" ];
  Node21 -> Node15 [color="grey25",style="solid",label=" -rules_" ,arrowhead="odiamond"];
  Node21 [label="{vector\< ore::data::\lScheduleRules \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node22 -> Node21 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node22 [label="{ScheduleRules\n||+ ScheduleRules()\l+ ScheduleRules()\l+ hasData()\l+ startDate()\l+ endDate()\l+ tenor()\l+ calendar()\l+ convention()\l+ termConvention()\l+ rule()\l+ endOfMonth()\l+ endOfMonthConvention()\l+ firstDate()\l+ lastDate()\l+ removeFirstDate()\l+ removeLastDate()\l+ modifyStartDate()\l+ modifyEndDate()\l+ modifyCalendar()\l+ modifyConvention()\l+ modifyTermConvention()\l+ modifyEndOfMonthConvention()\l* termConvention_\l* fromXML()\l* toXML()\l* startDate()\l* endDate()\l* tenor()\l* calendar()\l* convention()\l* termConvention()\l* rule()\l* endOfMonth()\l* endOfMonthConvention()\l* firstDate()\l* lastDate()\l* removeFirstDate()\l* removeLastDate()\l* modifyStartDate()\l* modifyEndDate()\l* modifyCalendar()\l* modifyConvention()\l* modifyTermConvention()\l* modifyEndOfMonthConvention()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_schedule_rules.html",tooltip="Serializable object holding schedule Rules data."];
  Node3 -> Node22 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node5 -> Node22 [color="grey25",style="solid",label=" -calendar_\n-convention_\n-endDate_\n-endOfMonthConvention\l_\n-endOfMonth_\n-firstDate_\n-lastDate_\n-rule_\n-startDate_\n-tenor_\n..." ,arrowhead="odiamond"];
  Node13 -> Node22 [color="grey25",style="solid",label=" -adjustEndDateToPrevious\lMonthEnd_\n-removeFirstDate_\n-removeLastDate_\n-was1T_" ,arrowhead="odiamond"];
  Node19 -> Node21 [dir="back",color="orange",style="solid",label=" \< ore::data::ScheduleRules \>" ];
  Node23 -> Node15 [color="grey25",style="solid",label=" -derived_" ,arrowhead="odiamond"];
  Node23 [label="{vector\< ore::data::\lScheduleDerived \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node24 -> Node23 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node24 [label="{ScheduleDerived\n||+ ScheduleDerived()\l+ ScheduleDerived()\l+ baseSchedule()\l+ calendar()\l+ convention()\l+ shift()\l+ removeFirstDate()\l+ removeLastDate()\l+ modifyCalendar()\l+ modifyConvention()\l+ modifyShift()\l* fromXML()\l* toXML()\l* baseSchedule()\l* calendar()\l* convention()\l* shift()\l* removeFirstDate()\l* removeLastDate()\l* modifyCalendar()\l* modifyConvention()\l* modifyShift()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_schedule_derived.html",tooltip="Serializable object holding Derived schedule data."];
  Node3 -> Node24 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node5 -> Node24 [color="grey25",style="solid",label=" -baseSchedule_\n-calendar_\n-convention_\n-shift_" ,arrowhead="odiamond"];
  Node13 -> Node24 [color="grey25",style="solid",label=" -removeFirstDate_\n-removeLastDate_" ,arrowhead="odiamond"];
  Node19 -> Node23 [dir="back",color="orange",style="solid",label=" \< ore::data::ScheduleDerived \>" ];
  Node5 -> Node15 [color="grey25",style="solid",label=" -name_" ,arrowhead="odiamond"];
  Node13 -> Node15 [color="grey25",style="solid",label=" -hasDerived_" ,arrowhead="odiamond"];
  Node5 -> Node1 [color="grey25",style="solid",label=" -eqCurrency_\n-fxIndex_\n-initialPriceCurrency_" ,arrowhead="odiamond"];
}
