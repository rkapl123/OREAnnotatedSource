digraph "CurrencyHedgedEquityIndexDecomposition"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{CurrencyHedgedEquityIndex\lDecomposition\n||+ CurrencyHedgedEquityIndex\lDecomposition()\l+ indexName()\l+ underlyingIndexName()\l+ indexCurrency()\l+ underlyingIndexCurrency()\l+ fxIndexName()\l+ isValid()\l+ referenceDate()\l+ rebalancingDate()\l+ currencyWeightsAndFxIndex\lNames()\l+ fxSpotRiskFromForwards()\l+ unhedgedSpotExposure()\l+ underlyingRefData()\l+ indexRefData()\l+ addAdditionalFixingsForEquity\lIndexDecomposition()\l+ referenceDate()\l+ rebalancingDate()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",style="solid",label=" -fxIndexName_\n-indexCurrency_\n-name_\n-underlyingIndexCurrency_" ,arrowhead="odiamond"];
  Node2 [label="{string\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{basic_string\< Char \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node1 [color="grey25",style="solid",label=" -indexRefData_" ,arrowhead="odiamond"];
  Node4 [label="{shared_ptr\< ore::data\l::CurrencyHedgedEquityIndex\lReferenceDatum \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node1 [color="grey25",style="solid",label=" -underlyingRefData_" ,arrowhead="odiamond"];
  Node5 [label="{shared_ptr\< ore::data\l::EquityIndexReferenceDatum \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node1 [color="grey25",style="solid",label=" -currencyWeightsAndFxIndex\lNames_" ,arrowhead="odiamond"];
  Node6 [label="{map\< std::string, std\l::pair\< double, std::\lstring \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node2 -> Node6 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node7 -> Node6 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node7 [label="{pair\< double, std::\lstring \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node6 [dir="back",color="orange",style="solid",label=" \< std::string, std\l::pair\< double, std\l::string \> \>" ];
  Node8 [label="{map\< K, T \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node8 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node9 [label="{K\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node8 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node10 [label="{T\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
}
