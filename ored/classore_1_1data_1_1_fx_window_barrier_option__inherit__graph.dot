digraph "FxWindowBarrierOption"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{FxWindowBarrierOption\n||+ FxWindowBarrierOption()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{WindowBarrierOption\n||+ WindowBarrierOption()\l+ WindowBarrierOption()\l+ build()\l+ setIsdaTaxonomyFields()\l+ fromXML()\l+ toXML()\l* currency_\l* fixingAmount_\l* strike_\l* underlying_\l* startDate_\l* endDate_\l* optionData_\l* barrier_\l* name()\l* initIndices()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_window_barrier_option.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{ScriptedTrade\n|# events_\l# numbers_\l# indices_\l# currencies_\l# daycounters_\l# script_\l# productTag_\l# scriptName_\l# simmProductClass_\l# scheduleProductClass_\l|+ ScriptedTrade()\l+ ScriptedTrade()\l+ ScriptedTrade()\l+ clear()\l+ build()\l+ notional()\l+ notionalCurrency()\l+ fromXML()\l+ toXML()\l+ build()\l+ underlyingIndices()\l+ setIsdaTaxonomyFields()\l+ events()\l+ numbers()\l+ indices()\l+ currencies()\l+ daycounters()\l+ script()\l+ productTag()\l+ scriptName()\l+ simmProductClass()\l+ scheduleProductClass()\l+ script()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_scripted_trade.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 [label="{Trade\n||+ Trade()\l+ Trade()\l+ ~Trade()\l+ build()\l+ fixings()\l+ requiredFixings()\l+ underlyingIndices()\l+ fromXML()\l+ toXML()\l+ reset()\l+ resetPricingStats()\l+ id()\l+ setEnvelope()\l+ setAdditionalData()\l+ tradeActions()\l+ id()\l+ tradeType()\l+ envelope()\l+ portfolioIds()\l+ tradeActions()\l+ instrument()\l+ legs()\l+ legCurrencies()\l+ legPayers()\l+ npvCurrency()\l+ notional()\l+ notionalCurrency()\l+ maturity()\l+ isExpired()\l+ issuer()\l+ additionalDatum()\l+ additionalData()\l+ sensitivityTemplate()\l* tradeType_\l* instrument_\l* legs_\l* legCurrencies_\l* legPayers_\l* npvCurrency_\l* notional_\l* notionalCurrency_\l* maturity_\l* issuer_\l* sensitivityTemplate_\l* sensitivityTemplateSet_\l* savedNumberOfPricings_\l* savedCumulativePricingTime_\l* requiredFixings_\l* additionalData_\l* id_\l* envelope_\l* tradeActions_\l* validate()\l* hasCashflows()\l* getCumulativePricingTime()\l* getNumberOfPricings()\l* addPremiums()\l* setLegBasedAdditionalData()\l* setSensitivityTemplate()\l* setSensitivityTemplate()\l* fromXML()\l* toXML()\l* reset()\l* resetPricingStats()\l* id()\l* setEnvelope()\l* setAdditionalData()\l* tradeActions()\l* id()\l* tradeType()\l* envelope()\l* portfolioIds()\l* tradeActions()\l* instrument()\l* legs()\l* legCurrencies()\l* legPayers()\l* npvCurrency()\l* notional()\l* notionalCurrency()\l* maturity()\l* isExpired()\l* issuer()\l* additionalDatum()\l* additionalData()\l* sensitivityTemplate()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_trade.html",tooltip="Trade base class."];
  Node5 -> Node4 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node5 [label="{XMLSerializable\n||+ ~XMLSerializable()\l+ fromXML()\l+ toXML()\l+ fromFile()\l+ toFile()\l+ fromXMLString()\l+ toXMLString()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_x_m_l_serializable.html",tooltip="Base class for all serializable classes."];
}
