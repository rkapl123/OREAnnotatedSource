digraph "DummyModel"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{DummyModel\n||+ DummyModel()\l+ type()\l+ pay()\l+ discount()\l+ npv()\l+ eval()\l+ fwdCompAvg()\l+ barrierProbability()\l+ fxSpotT0()\l+ extractT0Result()\l+ referenceDate()\l+ baseCcy()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{Model\n||+ Model()\l+ ~Model()\l+ type()\l+ size()\l+ trainingSamples()\l+ toggleTrainingPaths()\l+ referenceDate()\l+ baseCcy()\l+ dt()\l+ timeFromReference()\l+ pay()\l+ discount()\l+ npv()\l+ eval()\l+ fwdCompAvg()\l+ barrierProbability()\l+ fxSpotT0()\l+ extractT0Result()\l+ releaseMemory()\l+ resetNPVMem()\l+ additionalResults()\l# performCalculations()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_model.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{LazyObject\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_lazy_object.html",tooltip=" "];
  Node4 -> Node2 [color="grey25",style="solid",label=" #additionalResults_" ,arrowhead="odiamond"];
  Node4 [label="{map\< std::string, boost\l::any \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node5 [label="{string\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node5 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node6 [label="{basic_string\< Char \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node4 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node7 [label="{any\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node4 [dir="back",color="orange",style="solid",label=" \< std::string, boost\l::any \>" ];
  Node8 [label="{map\< K, T \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node8 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node9 [label="{K\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node8 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node10 [label="{T\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node2 [color="grey25",style="solid",label=" -n_" ,arrowhead="odiamond"];
  Node11 [label="{Size\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node1 [color="grey25",style="solid",label=" -dummyResult_" ,arrowhead="odiamond"];
  Node12 [label="{RandomVariable\n||+ ~RandomVariable()\l+ RandomVariable()\l+ RandomVariable()\l+ RandomVariable()\l+ operator=()\l+ operator=()\l+ RandomVariable()\l+ RandomVariable()\l+ RandomVariable()\l+ copyToMatrixCol()\l+ copyToArray()\l+ clear()\l+ set()\l+ setTime()\l+ setAll()\l+ resetSize()\l+ deterministic()\l+ updateDeterministic()\l+ initialised()\l+ size()\l+ operator[]()\l+ at()\l+ time()\l+ operator+=()\l+ operator-=()\l+ operator*=()\l+ operator/=()\l+ expand()\l+ data()\l- checkTimeConsistencyAndUpdate()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="C:/dev/ORE/documentation/QuantExt/doc/quantext.tag$struct_quant_ext_1_1_random_variable.html",tooltip=" "];
  Node13 -> Node12 [color="grey25",style="solid",label=" +deleter" ,arrowhead="odiamond"];
  Node13 [label="{function\< void(QuantExt\l::RandomVariable &)\>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node12 [color="grey25",style="solid",label=" -n_" ,arrowhead="odiamond"];
  Node14 -> Node12 [color="grey25",style="solid",label=" -constantData_\n-data_" ,arrowhead="odiamond"];
  Node14 [label="{double\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node15 -> Node12 [color="grey25",style="solid",label=" -deterministic_" ,arrowhead="odiamond"];
  Node15 [label="{bool\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classbool.html",tooltip=" "];
  Node16 -> Node12 [color="grey25",style="solid",label=" -time_" ,arrowhead="odiamond"];
  Node16 [label="{Real\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
}
