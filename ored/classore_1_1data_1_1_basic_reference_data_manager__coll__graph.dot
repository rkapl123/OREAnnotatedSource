digraph "BasicReferenceDataManager"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{BasicReferenceDataManager\n||+ BasicReferenceDataManager()\l+ BasicReferenceDataManager()\l+ appendData()\l+ buildReferenceDatum()\l+ fromXML()\l+ toXML()\l+ clear()\l+ hasData()\l+ getData()\l+ add()\l+ addFromXMLNode()\l# latestValidFrom()\l# check()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Basic Concrete impl that loads an big XML and keeps data in memory."];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{ReferenceDataManager\n||+ ~ReferenceDataManager()\l+ hasData()\l+ getData()\l+ add()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_reference_data_manager.html",tooltip="Interface for Reference Data lookups."];
  Node3 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{XMLSerializable\n||+ ~XMLSerializable()\l+ fromXML()\l+ toXML()\l+ fromFile()\l+ toFile()\l+ fromXMLString()\l+ toXMLString()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_x_m_l_serializable.html",tooltip="Base class for all serializable classes."];
  Node4 -> Node1 [color="grey25",style="solid",label=" #data_" ,arrowhead="odiamond"];
  Node4 [label="{map\< std::pair\< string,\l string \>, std::map\< QuantLib\l::Date, QuantLib::ext::shared\l_ptr\< ore::data::ReferenceDatum \> \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node5 [label="{pair\< string, string \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node4 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node6 [label="{map\< QuantLib::Date,\l QuantLib::ext::shared\l_ptr\< ore::data::ReferenceDatum \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node4 [dir="back",color="orange",style="solid",label=" \< std::pair\< string,\l string \>, std::map\l\< QuantLib::Date, QuantLib\l::ext::shared_ptr\< ore::data\l::ReferenceDatum \> \> \>" ];
  Node7 [label="{map\< K, T \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node7 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node8 [label="{K\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node7 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node9 [label="{T\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node1 [color="grey25",style="solid",label=" #duplicates_" ,arrowhead="odiamond"];
  Node10 [label="{set\< std::tuple\< string,\l string, QuantLib::Date \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node10 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node11 [label="{tuple\< string, string,\l QuantLib::Date \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node10 [dir="back",color="orange",style="solid",label=" \< std::tuple\< string,\l string, QuantLib::Date \> \>" ];
  Node12 [label="{set\< K \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node12 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node13 -> Node1 [color="grey25",style="solid",label=" #buildErrors_" ,arrowhead="odiamond"];
  Node13 [label="{map\< std::pair\< string,\l string \>, std::map\< QuantLib\l::Date, string \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node13 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node14 -> Node13 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node14 [label="{map\< QuantLib::Date,\l string \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node13 [dir="back",color="orange",style="solid",label=" \< std::pair\< string,\l string \>, std::map\l\< QuantLib::Date, string \> \>" ];
}
