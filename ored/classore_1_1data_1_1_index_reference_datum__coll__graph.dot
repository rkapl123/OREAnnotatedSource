digraph "IndexReferenceDatum"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{IndexReferenceDatum\n||+ fromXML()\l+ toXML()\l+ underlyings()\l+ setUnderlyings()\l+ addUnderlying()\l# IndexReferenceDatum()\l# IndexReferenceDatum()\l# IndexReferenceDatum()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Base class for indices - lets see if we can keep this, they might diverge too much...."];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{ReferenceDatum\n||+ ReferenceDatum()\l+ ReferenceDatum()\l+ ReferenceDatum()\l+ setType()\l+ setId()\l+ setValidFrom()\l+ type()\l+ id()\l+ validFrom()\l+ fromXML()\l+ toXML()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_reference_datum.html",tooltip="Base class for reference data."];
  Node3 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{XMLSerializable\n||+ ~XMLSerializable()\l+ fromXML()\l+ toXML()\l+ fromFile()\l+ toFile()\l+ fromXMLString()\l+ toXMLString()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_x_m_l_serializable.html",tooltip="Base class for all serializable classes."];
  Node4 -> Node2 [color="grey25",style="solid",label=" -id_\n-type_" ,arrowhead="odiamond"];
  Node4 [label="{string\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node5 [label="{basic_string\< Char \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node2 [color="grey25",style="solid",label=" -validFrom_" ,arrowhead="odiamond"];
  Node6 [label="{Date\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node1 [color="grey25",style="solid",label=" -data_" ,arrowhead="odiamond"];
  Node7 [label="{map\< std::string, double \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node7 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node8 -> Node7 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node8 [label="{double\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node7 [dir="back",color="orange",style="solid",label=" \< std::string, double \>" ];
  Node9 [label="{map\< K, T \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node9 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node10 [label="{K\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node9 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node11 [label="{T\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
}
