digraph "CurrencyParser"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{CurrencyParser\n||+ CurrencyParser()\l+ parseCurrency()\l+ parseMinorCurrency()\l+ parseCurrencyWithMinors()\l+ parseCurrencyPair()\l+ addCurrency()\l+ addMetal()\l+ addCrypto()\l+ isValidCurrency()\l+ isMinorCurrency()\l+ isPseudoCurrency()\l+ isPreciousMetal()\l+ isCryptoCurrency()\l+ hasMinorCurrency()\l+ getMinorCurrency()\l+ pseudoCurrencyCodes()\l+ convertMinorToMajorCurrency()\l+ reset()\l- addMinorCurrencyCodes()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{Singleton\< CurrencyParser,\l std::integral_constant\l\< bool, true \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node1 [color="grey25",style="solid",label=" -mutex_" ,arrowhead="odiamond"];
  Node3 [label="{shared_mutex\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node1 [color="grey25",style="solid",label=" -cryptoCurrencies_\n-currencies_\n-minorCurrencies\l_\n-preciousMetals_" ,arrowhead="odiamond"];
  Node4 [label="{map\< std::string, QuantLib\l::Currency \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node5 [label="{string\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node5 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node6 [label="{basic_string\< Char \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node4 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node7 [label="{Currency\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node4 [dir="back",color="orange",style="solid",label=" \< std::string, QuantLib\l::Currency \>" ];
  Node8 [label="{map\< K, T \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node8 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node9 [label="{K\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node8 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node10 [label="{T\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
}
