digraph "SecuritySpreadConvention"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{SecuritySpreadConvention\n||+ SecuritySpreadConvention()\l+ SecuritySpreadConvention()\l+ SecuritySpreadConvention()\l+ dayCounter()\l+ tenorCalendar()\l+ compounding()\l+ compoundingFrequency()\l+ spotLag()\l+ spotCalendar()\l+ rollConvention()\l+ eom()\l+ tenorBased()\l* dayCounter_\l* tenorCalendar_\l* compounding_\l* compoundingFrequency_\l* spotLag_\l* spotCalendar_\l* rollConvention_\l* eom_\l* tenorBased_\l* strDayCounter_\l* strTenorCalendar_\l* strCompounding_\l* strCompoundingFrequency_\l* strSpotLag_\l* strSpotCalendar_\l* strRollConvention_\l* strEom_\l* fromXML()\l* toXML()\l* build()\l* SecuritySpreadConvention()\l* SecuritySpreadConvention()\l* SecuritySpreadConvention()\l* dayCounter()\l* tenorCalendar()\l* compounding()\l* compoundingFrequency()\l* spotLag()\l* spotCalendar()\l* rollConvention()\l* eom()\l* tenorBased()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Container for storing Bond Spread Rate conventions."];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{Convention\n||+ ~Convention()\l+ id()\l+ type()\l* type_\l* id_\l* build()\l* Convention()\l* Convention()\l* id()\l* type()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_convention.html",tooltip="Abstract base class for convention objects."];
  Node3 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{XMLSerializable\n||+ ~XMLSerializable()\l+ fromXML()\l+ toXML()\l+ fromFile()\l+ toFile()\l+ fromXMLString()\l+ toXMLString()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_x_m_l_serializable.html",tooltip="Base class for all serializable classes."];
}
