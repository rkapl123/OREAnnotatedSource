digraph "VanillaOptionTrade"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{VanillaOptionTrade\n||+ build()\l+ setNotionalAndCurrencies()\l* assetClassUnderlying_\l* option_\l* assetName_\l* currency_\l* underlyingCurrency_\l* quantity_\l* strike_\l* index_\l* indexName_\l* expiryDate_\l* forwardDate_\l* paymentDate_\l* option()\l* asset()\l* currency()\l* strike()\l* quantity()\l* forwardDate()\l* paymentDate()\l* VanillaOptionTrade()\l* VanillaOptionTrade()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Serializable Vanilla Option."];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{Trade\n||+ Trade()\l+ Trade()\l+ ~Trade()\l+ build()\l+ fixings()\l+ requiredFixings()\l+ underlyingIndices()\l+ fromXML()\l+ toXML()\l+ reset()\l+ resetPricingStats()\l+ id()\l+ setEnvelope()\l+ setAdditionalData()\l+ tradeActions()\l+ id()\l+ tradeType()\l+ envelope()\l+ portfolioIds()\l+ tradeActions()\l+ instrument()\l+ legs()\l+ legCurrencies()\l+ legPayers()\l+ npvCurrency()\l+ notional()\l+ notionalCurrency()\l+ maturity()\l+ isExpired()\l+ issuer()\l+ additionalDatum()\l+ additionalData()\l+ sensitivityTemplate()\l* tradeType_\l* instrument_\l* legs_\l* legCurrencies_\l* legPayers_\l* npvCurrency_\l* notional_\l* notionalCurrency_\l* maturity_\l* issuer_\l* sensitivityTemplate_\l* sensitivityTemplateSet_\l* savedNumberOfPricings_\l* savedCumulativePricingTime_\l* requiredFixings_\l* additionalData_\l* id_\l* envelope_\l* tradeActions_\l* validate()\l* hasCashflows()\l* getCumulativePricingTime()\l* getNumberOfPricings()\l* addPremiums()\l* setLegBasedAdditionalData()\l* setSensitivityTemplate()\l* setSensitivityTemplate()\l* fromXML()\l* toXML()\l* reset()\l* resetPricingStats()\l* id()\l* setEnvelope()\l* setAdditionalData()\l* tradeActions()\l* id()\l* tradeType()\l* envelope()\l* portfolioIds()\l* tradeActions()\l* instrument()\l* legs()\l* legCurrencies()\l* legPayers()\l* npvCurrency()\l* notional()\l* notionalCurrency()\l* maturity()\l* isExpired()\l* issuer()\l* additionalDatum()\l* additionalData()\l* sensitivityTemplate()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_trade.html",tooltip="Trade base class."];
  Node3 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{XMLSerializable\n||+ ~XMLSerializable()\l+ fromXML()\l+ toXML()\l+ fromFile()\l+ toFile()\l+ fromXMLString()\l+ toXMLString()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_x_m_l_serializable.html",tooltip="Base class for all serializable classes."];
  Node1 -> Node4 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 [label="{CommodityOption\n||+ CommodityOption()\l+ CommodityOption()\l+ build()\l+ underlyingIndices()\l+ fromXML()\l+ toXML()\l+ hasCashflows()\l* isFuturePrice_\l* futureExpiryDate_\l* isFuturePrice()\l* futureExpiryDate()\l* fromXML()\l* toXML()\l* hasCashflows()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_commodity_option.html",tooltip="Commodity option trade representation."];
  Node1 -> Node5 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node5 [label="{EquityFutureOption\n||+ EquityFutureOption()\l+ EquityFutureOption()\l+ build()\l+ name()\l+ underlying()\l* underlying_\l* fromXML()\l* toXML()\l* underlyingIndices()\l* name()\l* underlying()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_equity_future_option.html",tooltip="Serializable EQ Futures Option."];
  Node1 -> Node6 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node6 [label="{EquityOption\n||+ EquityOption()\l+ EquityOption()\l+ build()\l+ underlyingIndices()\l+ equityName()\l+ strikeCurrency()\l* equityUnderlying_\l* strikeCurrency_\l* fromXML()\l* toXML()\l* equityName()\l* strikeCurrency()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_equity_option.html",tooltip="Serializable Equity Option."];
  Node6 -> Node7 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node7 [label="{EquityEuropeanBarrierOption\n||+ EquityEuropeanBarrierOption()\l+ EquityEuropeanBarrierOption()\l+ build()\l+ barrier()\l* barrier_\l* fromXML()\l* toXML()\l* barrier()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_equity_european_barrier_option.html",tooltip="Serializable EQ European Barrier Option."];
  Node1 -> Node8 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node8 [label="{FxOption\n||+ FxOption()\l+ FxOption()\l+ build()\l+ boughtCurrency()\l+ boughtAmount()\l+ soldCurrency()\l+ soldAmount()\l+ fxIndex()\l* fxIndex_\l* fromXML()\l* toXML()\l* boughtCurrency()\l* boughtAmount()\l* soldCurrency()\l* soldAmount()\l* fxIndex()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_fx_option.html",tooltip="Serializable FX Option."];
}
