digraph "MultiLegOption"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{MultiLegOption\n||+ MultiLegOption()\l+ MultiLegOption()\l+ MultiLegOption()\l+ build()\l+ option()\l+ hasOption()\l+ underlying()\l+ fromXML()\l+ toXML()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{Trade\n||+ Trade()\l+ Trade()\l+ ~Trade()\l+ build()\l+ fixings()\l+ requiredFixings()\l+ underlyingIndices()\l+ fromXML()\l+ toXML()\l+ reset()\l+ resetPricingStats()\l+ id()\l+ setEnvelope()\l+ setAdditionalData()\l+ tradeActions()\l+ id()\l+ tradeType()\l+ envelope()\l+ portfolioIds()\l+ tradeActions()\l+ instrument()\l+ legs()\l+ legCurrencies()\l+ legPayers()\l+ npvCurrency()\l+ notional()\l+ notionalCurrency()\l+ maturity()\l+ isExpired()\l+ issuer()\l+ additionalDatum()\l+ additionalData()\l+ sensitivityTemplate()\l* validate()\l* hasCashflows()\l* getCumulativePricingTime()\l* getNumberOfPricings()\l* addPremiums()\l* setLegBasedAdditionalData()\l* setSensitivityTemplate()\l* setSensitivityTemplate()\l* fromXML()\l* toXML()\l* reset()\l* resetPricingStats()\l* id()\l* setEnvelope()\l* setAdditionalData()\l* tradeActions()\l* id()\l* tradeType()\l* envelope()\l* portfolioIds()\l* tradeActions()\l* instrument()\l* legs()\l* legCurrencies()\l* legPayers()\l* npvCurrency()\l* notional()\l* notionalCurrency()\l* maturity()\l* isExpired()\l* issuer()\l* additionalDatum()\l* additionalData()\l* sensitivityTemplate()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_trade.html",tooltip="Trade base class."];
  Node3 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{XMLSerializable\n||+ ~XMLSerializable()\l+ fromXML()\l+ toXML()\l+ fromFile()\l+ toFile()\l+ fromXMLString()\l+ toXMLString()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_x_m_l_serializable.html",tooltip="Base class for all serializable classes."];
  Node4 -> Node2 [color="grey25",style="solid",label=" #issuer_\n#notionalCurrency\l_\n#npvCurrency_\n#sensitivityTemplate\l_\n#tradeType_\n-id_" ,arrowhead="odiamond"];
  Node4 [label="{string\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node5 [label="{basic_string\< Char \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node2 [color="grey25",style="solid",label=" #instrument_" ,arrowhead="odiamond"];
  Node6 [label="{shared_ptr\< ore::data\l::InstrumentWrapper \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node2 [color="grey25",style="solid",label=" #legs_" ,arrowhead="odiamond"];
  Node7 [label="{vector\< QuantLib::Leg \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node7 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node8 [label="{Leg\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node7 [dir="back",color="orange",style="solid",label=" \< QuantLib::Leg \>" ];
  Node9 [label="{vector\< T \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node9 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node10 [label="{T\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node2 [color="grey25",style="solid",label=" #legCurrencies_" ,arrowhead="odiamond"];
  Node11 [label="{vector\< string \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node11 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node9 -> Node11 [dir="back",color="orange",style="solid",label=" \< string \>" ];
  Node12 -> Node2 [color="grey25",style="solid",label=" #legPayers_" ,arrowhead="odiamond"];
  Node12 [label="{vector\< bool \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node12 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node13 [label="{bool\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classbool.html",tooltip=" "];
  Node9 -> Node12 [dir="back",color="orange",style="solid",label=" \< bool \>" ];
  Node14 -> Node2 [color="grey25",style="solid",label=" #notional_" ,arrowhead="odiamond"];
  Node14 [label="{Real\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node15 -> Node2 [color="grey25",style="solid",label=" #maturity_" ,arrowhead="odiamond"];
  Node15 [label="{Date\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node2 [color="grey25",style="solid",label=" #sensitivityTemplateSet_" ,arrowhead="odiamond"];
  Node16 -> Node2 [color="grey25",style="solid",label=" #savedNumberOfPricings_" ,arrowhead="odiamond"];
  Node16 [label="{size_t\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node17 -> Node2 [color="grey25",style="solid",label=" #savedCumulativePricingTime_" ,arrowhead="odiamond"];
  Node17 [label="{nanosecond_type\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node18 -> Node2 [color="grey25",style="solid",label=" #requiredFixings_" ,arrowhead="odiamond"];
  Node18 [label="{RequiredFixings\n||+ fixingDatesIndices()\l+ addFixingDate()\l+ addFixingDate()\l+ addFixingDates()\l+ addFixingDates()\l+ addZeroInflationFixingDate()\l+ addZeroInflationFixingDate()\l+ addYoYInflationFixingDate()\l+ addYoYInflationFixingDate()\l+ clear()\l+ addData()\l+ unsetPayDates()\l+ makeCopyWithMandatoryOverride()\l+ filteredFixingDates()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_required_fixings.html",tooltip=" "];
  Node19 -> Node18 [color="grey25",style="solid",label=" -fixingDates_" ,arrowhead="odiamond"];
  Node19 [label="{set\< ore::data::Required\lFixings::FixingEntry \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node20 -> Node19 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node20 [label="{FixingEntry\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structore_1_1data_1_1_required_fixings_1_1_fixing_entry.html",tooltip=" "];
  Node4 -> Node20 [color="grey25",style="solid",label=" +indexName" ,arrowhead="odiamond"];
  Node15 -> Node20 [color="grey25",style="solid",label=" +fixingDate\n+payDate" ,arrowhead="odiamond"];
  Node13 -> Node20 [color="grey25",style="solid",label=" +alwaysAddIfPaysOnSettlement\n+mandatory" ,arrowhead="odiamond"];
  Node21 -> Node19 [dir="back",color="orange",style="solid",label=" \< ore::data::RequiredFixings\l::FixingEntry \>" ];
  Node21 [label="{set\< K \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node22 -> Node21 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node22 [label="{K\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node23 -> Node18 [color="grey25",style="solid",label=" -zeroInflationFixingDates_" ,arrowhead="odiamond"];
  Node23 [label="{set\< ore::data::Required\lFixings::ZeroInflationFixing\lEntry \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node24 -> Node23 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node24 [label="{ZeroInflationFixingEntry\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structore_1_1data_1_1_required_fixings_1_1_zero_inflation_fixing_entry.html",tooltip=" "];
  Node25 -> Node24 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node25 [label="{InflationFixingEntry\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structore_1_1data_1_1_required_fixings_1_1_inflation_fixing_entry.html",tooltip=" "];
  Node20 -> Node25 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node13 -> Node25 [color="grey25",style="solid",label=" +indexInterpolated" ,arrowhead="odiamond"];
  Node26 -> Node25 [color="grey25",style="solid",label=" +indexFreq" ,arrowhead="odiamond"];
  Node26 [label="{Frequency\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node27 -> Node25 [color="grey25",style="solid",label=" +availabilityLeg" ,arrowhead="odiamond"];
  Node27 [label="{Period\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node28 -> Node24 [color="grey25",style="solid",label=" +couponInterpolation" ,arrowhead="odiamond"];
  Node28 [label="{InterpolationType\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node26 -> Node24 [color="grey25",style="solid",label=" +couponFrequency" ,arrowhead="odiamond"];
  Node21 -> Node23 [dir="back",color="orange",style="solid",label=" \< ore::data::RequiredFixings\l::ZeroInflationFixingEntry \>" ];
  Node29 -> Node18 [color="grey25",style="solid",label=" -yoyInflationFixingDates_" ,arrowhead="odiamond"];
  Node29 [label="{set\< ore::data::Required\lFixings::InflationFixingEntry \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node25 -> Node29 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node21 -> Node29 [dir="back",color="orange",style="solid",label=" \< ore::data::RequiredFixings\l::InflationFixingEntry \>" ];
  Node30 -> Node2 [color="grey25",style="solid",label=" #additionalData_" ,arrowhead="odiamond"];
  Node30 [label="{map\< std::string, boost\l::any \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node30 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node31 -> Node30 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node31 [label="{any\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node32 -> Node30 [dir="back",color="orange",style="solid",label=" \< std::string, boost\l::any \>" ];
  Node32 [label="{map\< K, T \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node22 -> Node32 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node10 -> Node32 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node33 -> Node2 [color="grey25",style="solid",label=" -envelope_" ,arrowhead="odiamond"];
  Node33 [label="{Envelope\n||+ Envelope()\l+ Envelope()\l+ Envelope()\l+ Envelope()\l+ Envelope()\l+ Envelope()\l+ fromXML()\l+ toXML()\l+ counterparty()\l+ nettingSetId()\l+ nettingSetDetails()\l+ portfolioIds()\l+ additionalFields()\l+ fullAdditionalFields()\l+ additionalField()\l+ additionalAnyField()\l+ setAdditionalField()\l* initialized()\l* hasNettingSetDetails()\l* fromXML()\l* toXML()\l* counterparty()\l* nettingSetId()\l* nettingSetDetails()\l* portfolioIds()\l* additionalFields()\l* fullAdditionalFields()\l* additionalField()\l* additionalAnyField()\l* setAdditionalField()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_envelope.html",tooltip="Serializable object holding generic trade data, reporting dimensions."];
  Node3 -> Node33 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 -> Node33 [color="grey25",style="solid",label=" -counterparty_" ,arrowhead="odiamond"];
  Node34 -> Node33 [color="grey25",style="solid",label=" -nettingSetDetails_" ,arrowhead="odiamond"];
  Node34 [label="{NettingSetDetails\n||+ NettingSetDetails()\l+ NettingSetDetails()\l+ NettingSetDetails()\l+ fromXML()\l+ toXML()\l+ nettingSetId()\l+ agreementType()\l+ callType()\l+ initialMarginType()\l+ legalEntityId()\l* empty()\l* emptyOptionalFields()\l* mapRepresentation()\l* fieldNames()\l* optionalFieldNames()\l* fromXML()\l* toXML()\l* nettingSetId()\l* agreementType()\l* callType()\l* initialMarginType()\l* legalEntityId()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_netting_set_details.html",tooltip="Serializable object holding netting set identification data."];
  Node3 -> Node34 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 -> Node34 [color="grey25",style="solid",label=" -agreementType_\n-callType_\n-initialMarginType\l_\n-legalEntityId\l_\n-nettingSetId_" ,arrowhead="odiamond"];
  Node35 -> Node33 [color="grey25",style="solid",label=" -portfolioIds_" ,arrowhead="odiamond"];
  Node35 [label="{set\< string \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node35 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node21 -> Node35 [dir="back",color="orange",style="solid",label=" \< string \>" ];
  Node36 -> Node33 [color="grey25",style="solid",label=" -additionalFields_" ,arrowhead="odiamond"];
  Node36 [label="{map\< string, boost\l::any \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node36 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node31 -> Node36 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node32 -> Node36 [dir="back",color="orange",style="solid",label=" \< string, boost::any \>" ];
  Node13 -> Node33 [color="grey25",style="solid",label=" -initialized_" ,arrowhead="odiamond"];
  Node37 -> Node2 [color="grey25",style="solid",label=" -tradeActions_" ,arrowhead="odiamond"];
  Node37 [label="{TradeActions\n||+ TradeActions()\l+ addAction()\l+ actions()\l+ empty()\l+ clear()\l+ fromXML()\l+ toXML()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_trade_actions.html",tooltip="Serializable object holding generic trade actions."];
  Node3 -> Node37 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node38 -> Node37 [color="grey25",style="solid",label=" -actions_" ,arrowhead="odiamond"];
  Node38 [label="{vector\< ore::data::\lTradeAction \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node39 -> Node38 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node39 [label="{TradeAction\n||+ TradeAction()\l+ TradeAction()\l+ type()\l+ owner()\l+ schedule()\l* fromXML()\l* toXML()\l* type()\l* owner()\l* schedule()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_trade_action.html",tooltip="Serializable object holding a trade action."];
  Node3 -> Node39 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 -> Node39 [color="grey25",style="solid",label=" -owner_\n-type_" ,arrowhead="odiamond"];
  Node40 -> Node39 [color="grey25",style="solid",label=" -schedule_" ,arrowhead="odiamond"];
  Node40 [label="{ScheduleData\n||+ ScheduleData()\l+ ScheduleData()\l+ ScheduleData()\l+ ScheduleData()\l+ addDates()\l+ addRules()\l+ addDerived()\l+ hasData()\l+ baseScheduleNames()\l+ dates()\l+ rules()\l+ derived()\l+ name()\l+ hasDerived()\l+ modifyDates()\l+ modifyRules()\l+ modifyDerived()\l* fromXML()\l* toXML()\l* dates()\l* rules()\l* derived()\l* name()\l* hasDerived()\l* modifyDates()\l* modifyRules()\l* modifyDerived()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_schedule_data.html",tooltip="Serializable schedule data."];
  Node3 -> Node40 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node41 -> Node40 [color="grey25",style="solid",label=" -dates_" ,arrowhead="odiamond"];
  Node41 [label="{vector\< ore::data::\lScheduleDates \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node42 -> Node41 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node42 [label="{ScheduleDates\n||+ ScheduleDates()\l+ ScheduleDates()\l+ hasData()\l+ calendar()\l+ convention()\l+ tenor()\l+ endOfMonth()\l+ endOfMonthConvention()\l+ dates()\l+ modifyDates()\l* fromXML()\l* toXML()\l* calendar()\l* convention()\l* tenor()\l* endOfMonth()\l* endOfMonthConvention()\l* dates()\l* modifyDates()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_schedule_dates.html",tooltip="Serializable object holding schedule Dates data."];
  Node3 -> Node42 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 -> Node42 [color="grey25",style="solid",label=" -calendar_\n-convention_\n-endOfMonthConvention\l_\n-endOfMonth_\n-tenor_" ,arrowhead="odiamond"];
  Node11 -> Node42 [color="grey25",style="solid",label=" -dates_" ,arrowhead="odiamond"];
  Node13 -> Node42 [color="grey25",style="solid",label=" -was1T_" ,arrowhead="odiamond"];
  Node9 -> Node41 [dir="back",color="orange",style="solid",label=" \< ore::data::ScheduleDates \>" ];
  Node43 -> Node40 [color="grey25",style="solid",label=" -rules_" ,arrowhead="odiamond"];
  Node43 [label="{vector\< ore::data::\lScheduleRules \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node44 -> Node43 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node44 [label="{ScheduleRules\n||+ ScheduleRules()\l+ ScheduleRules()\l+ hasData()\l+ startDate()\l+ endDate()\l+ tenor()\l+ calendar()\l+ convention()\l+ termConvention()\l+ rule()\l+ endOfMonth()\l+ endOfMonthConvention()\l+ firstDate()\l+ lastDate()\l+ removeFirstDate()\l+ removeLastDate()\l+ modifyStartDate()\l+ modifyEndDate()\l+ modifyCalendar()\l+ modifyConvention()\l+ modifyTermConvention()\l+ modifyEndOfMonthConvention()\l* termConvention_\l* fromXML()\l* toXML()\l* startDate()\l* endDate()\l* tenor()\l* calendar()\l* convention()\l* termConvention()\l* rule()\l* endOfMonth()\l* endOfMonthConvention()\l* firstDate()\l* lastDate()\l* removeFirstDate()\l* removeLastDate()\l* modifyStartDate()\l* modifyEndDate()\l* modifyCalendar()\l* modifyConvention()\l* modifyTermConvention()\l* modifyEndOfMonthConvention()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_schedule_rules.html",tooltip="Serializable object holding schedule Rules data."];
  Node3 -> Node44 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 -> Node44 [color="grey25",style="solid",label=" -calendar_\n-convention_\n-endDate_\n-endOfMonthConvention\l_\n-endOfMonth_\n-firstDate_\n-lastDate_\n-rule_\n-startDate_\n-tenor_\n..." ,arrowhead="odiamond"];
  Node13 -> Node44 [color="grey25",style="solid",label=" -adjustEndDateToPrevious\lMonthEnd_\n-removeFirstDate_\n-removeLastDate_\n-was1T_" ,arrowhead="odiamond"];
  Node9 -> Node43 [dir="back",color="orange",style="solid",label=" \< ore::data::ScheduleRules \>" ];
  Node45 -> Node40 [color="grey25",style="solid",label=" -derived_" ,arrowhead="odiamond"];
  Node45 [label="{vector\< ore::data::\lScheduleDerived \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node46 -> Node45 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node46 [label="{ScheduleDerived\n||+ ScheduleDerived()\l+ ScheduleDerived()\l+ baseSchedule()\l+ calendar()\l+ convention()\l+ shift()\l+ removeFirstDate()\l+ removeLastDate()\l+ modifyCalendar()\l+ modifyConvention()\l+ modifyShift()\l* fromXML()\l* toXML()\l* baseSchedule()\l* calendar()\l* convention()\l* shift()\l* removeFirstDate()\l* removeLastDate()\l* modifyCalendar()\l* modifyConvention()\l* modifyShift()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_schedule_derived.html",tooltip="Serializable object holding Derived schedule data."];
  Node3 -> Node46 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 -> Node46 [color="grey25",style="solid",label=" -baseSchedule_\n-calendar_\n-convention_\n-shift_" ,arrowhead="odiamond"];
  Node13 -> Node46 [color="grey25",style="solid",label=" -removeFirstDate_\n-removeLastDate_" ,arrowhead="odiamond"];
  Node9 -> Node45 [dir="back",color="orange",style="solid",label=" \< ore::data::ScheduleDerived \>" ];
  Node4 -> Node40 [color="grey25",style="solid",label=" -name_" ,arrowhead="odiamond"];
  Node13 -> Node40 [color="grey25",style="solid",label=" -hasDerived_" ,arrowhead="odiamond"];
  Node9 -> Node38 [dir="back",color="orange",style="solid",label=" \< ore::data::TradeAction \>" ];
  Node47 -> Node1 [color="grey25",style="solid",label=" -optionData_" ,arrowhead="odiamond"];
  Node47 [label="{OptionData\n||+ OptionData()\l+ OptionData()\l+ longShort()\l+ callPut()\l+ payoffType()\l+ payoffType2()\l+ style()\l+ payoffAtExpiry()\l+ exerciseDates()\l+ exerciseDatesSchedule()\l+ noticePeriod()\l+ noticeCalendar()\l+ noticeConvention()\l+ settlement()\l+ settlementMethod()\l+ premiumData()\l+ exerciseFees()\l+ exerciseFeeDates()\l+ exerciseFeeTypes()\l+ exerciseFeeSettlementPeriod()\l+ exerciseFeeSettlementCalendar()\l+ exerciseFeeSettlementConvention()\l+ exercisePrices()\l+ automaticExercise()\l+ exerciseData()\l+ paymentData()\l+ setExerciseDates()\l+ setExerciseDates()\l+ setAutomaticExercise()\l+ setPaymentData()\l+ setCallPut()\l+ setLongShort()\l+ setStyle()\l+ setPayoffAtExpiry()\l+ setNoticePeriod()\l+ setSettlement()\l* style_\l* settlement_\l* settlementMethod_\l* fromXML()\l* toXML()\l* isAutomaticExercise()\l* longShort()\l* callPut()\l* payoffType()\l* payoffType2()\l* style()\l* payoffAtExpiry()\l* exerciseDates()\l* exerciseDatesSchedule()\l* noticePeriod()\l* noticeCalendar()\l* noticeConvention()\l* settlement()\l* settlementMethod()\l* premiumData()\l* exerciseFees()\l* exerciseFeeDates()\l* exerciseFeeTypes()\l* exerciseFeeSettlementPeriod()\l* exerciseFeeSettlementCalendar()\l* exerciseFeeSettlementConvention()\l* exercisePrices()\l* automaticExercise()\l* exerciseData()\l* paymentData()\l* setExerciseDates()\l* setExerciseDates()\l* setAutomaticExercise()\l* setPaymentData()\l* setCallPut()\l* setLongShort()\l* setStyle()\l* setPayoffAtExpiry()\l* setNoticePeriod()\l* setSettlement()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_option_data.html",tooltip="Serializable object holding option data."];
  Node3 -> Node47 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 -> Node47 [color="grey25",style="solid",label=" -callPut_\n-exerciseFeeSettlement\lCalendar_\n-exerciseFeeSettlementConvention\l_\n-exerciseFeeSettlementPeriod\l_\n-longShort_\n-noticeCalendar_\n-noticeConvention\l_\n-noticePeriod_\n-payoffType2_\n-payoffType_\n..." ,arrowhead="odiamond"];
  Node13 -> Node47 [color="grey25",style="solid",label=" -payoffAtExpiry_" ,arrowhead="odiamond"];
  Node40 -> Node47 [color="grey25",style="solid",label=" -exerciseDatesSchedule_" ,arrowhead="odiamond"];
  Node11 -> Node47 [color="grey25",style="solid",label=" -exerciseDates_\n-exerciseFeeDates\l_\n-exerciseFeeTypes_" ,arrowhead="odiamond"];
  Node48 -> Node47 [color="grey25",style="solid",label=" -premiumData_" ,arrowhead="odiamond"];
  Node48 [label="{PremiumData\n||+ PremiumData()\l+ PremiumData()\l+ PremiumData()\l+ latestPremiumDate()\l+ premiumData()\l* fromXML()\l* toXML()\l* premiumData()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_premium_data.html",tooltip="Serializable object holding premium data."];
  Node3 -> Node48 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node49 -> Node48 [color="grey25",style="solid",label=" -premiumData_" ,arrowhead="odiamond"];
  Node49 [label="{vector\< ore::data::\lPremiumData::PremiumDatum \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node50 -> Node49 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node50 [label="{PremiumDatum\n||+ PremiumDatum()\l+ PremiumDatum()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structore_1_1data_1_1_premium_data_1_1_premium_datum.html",tooltip=" "];
  Node51 -> Node50 [color="grey25",style="solid",label=" +amount" ,arrowhead="odiamond"];
  Node51 [label="{double\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node50 [color="grey25",style="solid",label=" +ccy" ,arrowhead="odiamond"];
  Node15 -> Node50 [color="grey25",style="solid",label=" +payDate" ,arrowhead="odiamond"];
  Node9 -> Node49 [dir="back",color="orange",style="solid",label=" \< ore::data::PremiumData\l::PremiumDatum \>" ];
  Node52 -> Node47 [color="grey25",style="solid",label=" -exerciseFees_\n-exercisePrices_" ,arrowhead="odiamond"];
  Node52 [label="{vector\< double \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node51 -> Node52 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node9 -> Node52 [dir="back",color="orange",style="solid",label=" \< double \>" ];
  Node53 -> Node47 [color="grey25",style="solid",label=" -automaticExercise_" ,arrowhead="odiamond"];
  Node53 [label="{optional\< bool \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node54 -> Node47 [color="grey25",style="solid",label=" -exerciseData_" ,arrowhead="odiamond"];
  Node54 [label="{optional\< ore::data\l::OptionExerciseData \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node55 -> Node47 [color="grey25",style="solid",label=" -paymentData_" ,arrowhead="odiamond"];
  Node55 [label="{optional\< ore::data\l::OptionPaymentData \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node1 [color="grey25",style="solid",label=" -hasOption_" ,arrowhead="odiamond"];
  Node56 -> Node1 [color="grey25",style="solid",label=" -underlyingData_" ,arrowhead="odiamond"];
  Node56 [label="{vector\< ore::data::\lLegData \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node57 -> Node56 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node57 [label="{LegData\n||+ LegData()\l+ LegData()\l+ fromXML()\l+ toXML()\l+ isPayer()\l+ currency()\l+ schedule()\l+ notionals()\l+ notionalDates()\l+ dayCounter()\l+ paymentConvention()\l+ notionalInitialExchange()\l+ notionalFinalExchange()\l+ notionalAmortizingExchange()\l+ isNotResetXCCY()\l+ foreignCurrency()\l+ foreignAmount()\l+ fxIndex()\l+ paymentLag()\l+ notionalPaymentLag()\l+ amortizationData()\l+ paymentCalendar()\l+ legType()\l+ concreteLegData()\l+ indices()\l+ paymentDates()\l+ indexing()\l+ indexingFromAssetLeg()\l+ lastPeriodDayCounter()\l+ paymentSchedule()\l+ strictNotionalDates()\l* notionals()\l* schedule()\l* notionalDates()\l* dayCounter()\l* isPayer()\l* concreteLegData()\l* indexing()\l* indexingFromAssetLeg()\l* paymentConvention()\l* paymentDates()\l* lastPeriodDayCounter()\l* strictNotionalDates()\l* initialiseConcreteLegData()\l* fromXML()\l* toXML()\l* isPayer()\l* currency()\l* schedule()\l* notionals()\l* notionalDates()\l* dayCounter()\l* paymentConvention()\l* notionalInitialExchange()\l* notionalFinalExchange()\l* notionalAmortizingExchange()\l* isNotResetXCCY()\l* foreignCurrency()\l* foreignAmount()\l* fxIndex()\l* paymentLag()\l* notionalPaymentLag()\l* amortizationData()\l* paymentCalendar()\l* legType()\l* concreteLegData()\l* indices()\l* paymentDates()\l* indexing()\l* indexingFromAssetLeg()\l* lastPeriodDayCounter()\l* paymentSchedule()\l* strictNotionalDates()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_leg_data.html",tooltip="Serializable object holding leg data."];
  Node3 -> Node57 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node58 -> Node57 [color="grey25",style="solid",label=" #indices_" ,arrowhead="odiamond"];
  Node58 [label="{set\< std::string \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node58 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node21 -> Node58 [dir="back",color="orange",style="solid",label=" \< std::string \>" ];
  Node59 -> Node57 [color="grey25",style="solid",label=" -concreteLegData_" ,arrowhead="odiamond"];
  Node59 [label="{shared_ptr\< ore::data\l::LegAdditionalData \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node57 [color="grey25",style="solid",label=" -indexingFromAssetLeg\l_\n-isNotResetXCCY\l_\n-isPayer_\n-notionalAmortizing\lExchange_\n-notionalFinalExchange\l_\n-notionalInitialExchange\l_\n-strictNotionalDates_" ,arrowhead="odiamond"];
  Node4 -> Node57 [color="grey25",style="solid",label=" -currency_\n-dayCounter_\n-foreignCurrency\l_\n-fxIndex_\n-lastPeriodDayCounter\l_\n-legType_\n-notionalPaymentLag\l_\n-paymentCalendar\l_\n-paymentConvention\l_\n-paymentLag_\n..." ,arrowhead="odiamond"];
  Node40 -> Node57 [color="grey25",style="solid",label=" -paymentSchedule_\n-schedule_" ,arrowhead="odiamond"];
  Node52 -> Node57 [color="grey25",style="solid",label=" -notionals_" ,arrowhead="odiamond"];
  Node11 -> Node57 [color="grey25",style="solid",label=" -notionalDates_" ,arrowhead="odiamond"];
  Node51 -> Node57 [color="grey25",style="solid",label=" -foreignAmount_" ,arrowhead="odiamond"];
  Node60 -> Node57 [color="grey25",style="solid",label=" -amortizationData_" ,arrowhead="odiamond"];
  Node60 [label="{vector\< ore::data::\lAmortizationData \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node61 -> Node60 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node61 [label="{AmortizationData\n||+ AmortizationData()\l+ AmortizationData()\l+ fromXML()\l+ toXML()\l+ type()\l+ value()\l+ startDate()\l+ endDate()\l+ frequency()\l+ underflow()\l+ initialized()\l- validate()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_amortization_data.html",tooltip="Serializable object holding amortization rules."];
  Node3 -> Node61 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 -> Node61 [color="grey25",style="solid",label=" -endDate_\n-frequency_\n-startDate_\n-type_" ,arrowhead="odiamond"];
  Node51 -> Node61 [color="grey25",style="solid",label=" -value_" ,arrowhead="odiamond"];
  Node13 -> Node61 [color="grey25",style="solid",label=" -initialized_\n-underflow_" ,arrowhead="odiamond"];
  Node9 -> Node60 [dir="back",color="orange",style="solid",label=" \< ore::data::Amortization\lData \>" ];
  Node62 -> Node57 [color="grey25",style="solid",label=" -paymentDates_" ,arrowhead="odiamond"];
  Node62 [label="{vector\< std::string \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node62 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node9 -> Node62 [dir="back",color="orange",style="solid",label=" \< std::string \>" ];
  Node63 -> Node57 [color="grey25",style="solid",label=" -indexing_" ,arrowhead="odiamond"];
  Node63 [label="{vector\< ore::data::\lIndexing \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node64 -> Node63 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node64 [label="{Indexing\n||+ Indexing()\l+ Indexing()\l+ hasData()\l+ quantity()\l+ index()\l+ indexFixingCalendar()\l+ indexIsDirty()\l+ indexIsRelative()\l+ indexIsConditionalOnSurvival()\l+ initialFixing()\l+ initialNotionalFixing()\l+ valuationSchedule()\l+ fixingDays()\l+ fixingCalendar()\l+ fixingConvention()\l+ inArrearsFixing()\l+ quantity()\l+ index()\l+ indexFixingCalendar()\l+ indexIsDirty()\l+ indexIsRelative()\l+ indexIsConditionalOnSurvival()\l+ initialFixing()\l+ initialNotionalFixing()\l+ valuationSchedule()\l+ fixingDays()\l+ fixingCalendar()\l+ fixingConvention()\l+ inArrearsFixing()\l* fromXML()\l* toXML()\l* hasData()\l* quantity()\l* index()\l* indexFixingCalendar()\l* indexIsDirty()\l* indexIsRelative()\l* indexIsConditionalOnSurvival()\l* initialFixing()\l* initialNotionalFixing()\l* valuationSchedule()\l* fixingDays()\l* fixingCalendar()\l* fixingConvention()\l* inArrearsFixing()\l* quantity()\l* index()\l* indexFixingCalendar()\l* indexIsDirty()\l* indexIsRelative()\l* indexIsConditionalOnSurvival()\l* initialFixing()\l* initialNotionalFixing()\l* valuationSchedule()\l* fixingDays()\l* fixingCalendar()\l* fixingConvention()\l* inArrearsFixing()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_indexing.html",tooltip="Serializable object holding indexing data."];
  Node3 -> Node64 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node13 -> Node64 [color="grey25",style="solid",label=" -hasData_\n-inArrearsFixing\l_\n-indexIsConditional\lOnSurvival_\n-indexIsDirty_\n-indexIsRelative_" ,arrowhead="odiamond"];
  Node14 -> Node64 [color="grey25",style="solid",label=" -initialFixing_\n-initialNotionalFixing\l_\n-quantity_" ,arrowhead="odiamond"];
  Node4 -> Node64 [color="grey25",style="solid",label=" -fixingCalendar_\n-fixingConvention\l_\n-indexFixingCalendar\l_\n-index_" ,arrowhead="odiamond"];
  Node40 -> Node64 [color="grey25",style="solid",label=" -valuationSchedule_" ,arrowhead="odiamond"];
  Node65 -> Node64 [color="grey25",style="solid",label=" -fixingDays_" ,arrowhead="odiamond"];
  Node65 [label="{Size\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node63 [dir="back",color="orange",style="solid",label=" \< ore::data::Indexing \>" ];
  Node9 -> Node56 [dir="back",color="orange",style="solid",label=" \< ore::data::LegData \>" ];
}
