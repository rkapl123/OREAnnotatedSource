digraph "Portfolio"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{Portfolio\n||+ Portfolio()\l+ add()\l+ has()\l+ get()\l+ clear()\l+ reset()\l+ size()\l+ empty()\l+ fromXML()\l+ toXML()\l+ remove()\l+ removeMatured()\l+ build()\l+ maturity()\l+ trades()\l+ ids()\l+ nettingSetMap()\l+ counterparties()\l+ counterpartyNettingSets()\l+ portfolioIds()\l+ hasNettingSetDetails()\l+ buildFailedTrades()\l+ ignoreTradeBuildFail()\l+ fixings()\l+ underlyingIndices()\l+ underlyingIndices()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Serializable portfolio."];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{XMLSerializable\n||+ ~XMLSerializable()\l+ fromXML()\l+ toXML()\l+ fromFile()\l+ toFile()\l+ fromXMLString()\l+ toXMLString()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_x_m_l_serializable.html",tooltip="Base class for all serializable classes."];
  Node3 -> Node1 [color="grey25",style="solid",label=" -buildFailedTrades\l_\n-ignoreTradeBuildFail_" ,arrowhead="odiamond"];
  Node3 [label="{bool\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classbool.html",tooltip=" "];
  Node4 -> Node1 [color="grey25",style="solid",label=" -trades_" ,arrowhead="odiamond"];
  Node4 [label="{map\< std::string, QuantLib\l::ext::shared_ptr\< ore::\ldata::Trade \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node5 [label="{string\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node5 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node6 [label="{basic_string\< Char \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node4 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node7 [label="{shared_ptr\< ore::data\l::Trade \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node4 [dir="back",color="orange",style="solid",label=" \< std::string, QuantLib\l::ext::shared_ptr\< ore\l::data::Trade \> \>" ];
  Node8 [label="{map\< K, T \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node8 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node9 [label="{K\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node8 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node10 [label="{T\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node1 [color="grey25",style="solid",label=" -underlyingIndicesCache_" ,arrowhead="odiamond"];
  Node11 [label="{map\< AssetClass, std\l::set\< std::string \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node11 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node12 [label="{AssetClass\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node11 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node13 [label="{set\< std::string \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node13 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node14 -> Node13 [dir="back",color="orange",style="solid",label=" \< std::string \>" ];
  Node14 [label="{set\< K \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node14 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node8 -> Node11 [dir="back",color="orange",style="solid",label=" \< AssetClass, std::\lset\< std::string \> \>" ];
}
