digraph "InMemoryLoader"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{InMemoryLoader\n||+ InMemoryLoader()\l+ loadQuotes()\l+ get()\l+ get()\l+ get()\l+ loadFixings()\l+ loadDividends()\l+ hasQuotes()\l+ add()\l+ addFixing()\l+ addDividend()\l+ reset()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{Loader\n||+ ~Loader()\l* boost::serialization\l::access\l* loadQuotes()\l* get()\l* get()\l* get()\l* has()\l* hasQuotes()\l* get()\l* loadFixings()\l* hasFixing()\l* getFixing()\l* loadDividends()\l* setActualDate()\l* actualDate()\l* checkFxDuplicate()\l* serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_loader.html",tooltip="Market data loader base class."];
  Node3 -> Node2 [color="grey25",style="solid",label=" #actualDate_" ,arrowhead="odiamond"];
  Node3 [label="{Date\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node1 [color="grey25",style="solid",label=" #data_" ,arrowhead="odiamond"];
  Node4 [label="{map\< QuantLib::Date,\l std::set\< QuantLib\l::ext::shared_ptr\< ore\l::data::MarketDatum \>,\l ore::data::SharedPtrMarketDatum\lComparator \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node4 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node5 -> Node4 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node5 [label="{set\< QuantLib::ext\l::shared_ptr\< ore::data\l::MarketDatum \>, ore::data\l::SharedPtrMarketDatumComparator \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node5 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node6 [label="{shared_ptr\< ore::data\l::MarketDatum \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node5 [dir="back",color="orange",style="solid",label=" \< QuantLib::ext::shared\l_ptr\< ore::data::MarketDatum\l \>, ore::data::SharedPtrMarketDatum\lComparator \>" ];
  Node7 [label="{set\< K \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node7 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node8 [label="{K\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node4 [dir="back",color="orange",style="solid",label=" \< QuantLib::Date, std\l::set\< QuantLib::ext\l::shared_ptr\< ore::data\l::MarketDatum \>, ore::data\l::SharedPtrMarketDatumComparator \> \>" ];
  Node9 [label="{map\< K, T \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node9 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node10 -> Node9 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node10 [label="{T\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node1 [color="grey25",style="solid",label=" #fixings_" ,arrowhead="odiamond"];
  Node11 [label="{set\< ore::data::Fixing \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node11 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node12 [label="{Fixing\n||+ Fixing()\l+ Fixing()\l+ empty()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structore_1_1data_1_1_fixing.html",tooltip="Fixing data structure."];
  Node3 -> Node12 [color="grey25",style="solid",label=" +date" ,arrowhead="odiamond"];
  Node13 -> Node12 [color="grey25",style="solid",label=" +name" ,arrowhead="odiamond"];
  Node13 [label="{string\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node13 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node14 [label="{basic_string\< Char \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node15 -> Node12 [color="grey25",style="solid",label=" +fixing" ,arrowhead="odiamond"];
  Node15 [label="{Real\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node11 [dir="back",color="orange",style="solid",label=" \< ore::data::Fixing \>" ];
  Node16 -> Node1 [color="grey25",style="solid",label=" #dividends_" ,arrowhead="odiamond"];
  Node16 [label="{set\< QuantExt::Dividend \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node17 -> Node16 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node17 [label="{Dividend\n||+ Dividend()\l+ Dividend()\l+ empty()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="C:/dev/ORE/documentation/QuantExt/doc/quantext.tag$struct_quant_ext_1_1_dividend.html",tooltip=" "];
  Node3 -> Node17 [color="grey25",style="solid",label=" +exDate\n+payDate" ,arrowhead="odiamond"];
  Node13 -> Node17 [color="grey25",style="solid",label=" +name" ,arrowhead="odiamond"];
  Node15 -> Node17 [color="grey25",style="solid",label=" +rate" ,arrowhead="odiamond"];
  Node7 -> Node16 [dir="back",color="orange",style="solid",label=" \< QuantExt::Dividend \>" ];
}
