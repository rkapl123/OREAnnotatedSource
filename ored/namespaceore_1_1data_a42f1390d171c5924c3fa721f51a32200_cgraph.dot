digraph "load"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [label="load",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [color="steelblue1",style="solid"];
  Node2 [label="ore::data::InMemoryLoader::add",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_in_memory_loader.html#ab033d7bbd4da0af2f75abb8952fcacce",tooltip=" "];
  Node2 -> Node3 [color="steelblue1",style="solid"];
  Node3 [label="ore::data::Loader::\lcheckFxDuplicate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_loader.html#a5fd63a6d54fdaac9a490ef18bf07c08d",tooltip=" "];
  Node3 -> Node4 [color="steelblue1",style="solid"];
  Node4 [label="fxDominance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__utilities.html#ga90c3a1ae532e31a7f2fd6eda8cbcf209",tooltip="Convert FX pair to market standard dominance."];
  Node3 -> Node5 [color="steelblue1",style="solid"];
  Node5 [label="ore::data::Loader::has",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_loader.html#acb476f7db0733b669e38e0a4359b5745",tooltip="Default implementation, returns false if get throws or returns a null pointer."];
  Node5 -> Node6 [color="steelblue1",style="solid"];
  Node6 [label="ore::data::Loader::get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_loader.html#a19d9f6f808db2631247ec12ffe291225",tooltip="get quote by its unique name, throws if not existent, override in derived classes for performance"];
  Node6 -> Node7 [color="steelblue1",style="solid"];
  Node7 [label="ore::data::Loader::\lloadQuotes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_loader.html#a0086c4f946085ef0b9d5c56bd1539f91",tooltip="get all quotes, TODO change the return value to std::set"];
  Node2 -> Node8 [color="steelblue1",style="solid"];
  Node8 [label="makeDummyMarketDatum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceore_1_1data.html#ad54d6392da5740836cc7336a525c67c3",tooltip=" "];
  Node2 -> Node9 [color="steelblue1",style="solid"];
  Node9 [label="parseMarketDatum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__marketdata.html#ga49b8909d3761de5c44f8140f95ec0d94",tooltip="Function to parse a market datum."];
  Node9 -> Node10 [color="steelblue1",style="solid"];
  Node10 [label="getDateFromDateOrPeriod",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__marketdata.html#ga71fc1e19d4a9d3acd5e6cd6b6ae533b6",tooltip="Get a date from a date string or period."];
  Node10 -> Node11 [color="steelblue1",style="solid"];
  Node11 [label="parseDateOrPeriod",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__utilities.html#ga6477391407eac174ea49df689ecf1ab2",tooltip="Convert text to QuantLib::Period or QuantLib::Date."];
  Node11 -> Node12 [color="steelblue1",style="solid"];
  Node12 [label="parseDate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__utilities.html#ga59b5fdda574d90facae95dec2d13040d",tooltip="Convert std::string to QuantLib::Date."];
  Node12 -> Node12 [color="steelblue1",style="solid"];
  Node12 -> Node13 [color="steelblue1",style="solid"];
  Node13 [label="parseInteger",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__utilities.html#gaecd67eda4fb5f4859bb8f6d383547721",tooltip="Convert text to QuantLib::Integer."];
  Node13 -> Node13 [color="steelblue1",style="solid"];
  Node12 -> Node14 [color="steelblue1",style="solid"];
  Node14 [label="size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceore_1_1data.html#a777e216dee6069b548bb87da7152699e",tooltip=" "];
  Node11 -> Node15 [color="steelblue1",style="solid"];
  Node15 [label="parsePeriod",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__utilities.html#ga8e0623e2cb01e250e9cfec4619256208",tooltip="Convert text to QuantLib::Period."];
  Node9 -> Node16 [color="steelblue1",style="solid"];
  Node16 [label="isOnePeriod",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceore_1_1data.html#a2c4ad9608d140b7d127d9aabc3002782",tooltip="return true if s represents a period of the form [0-9][D|W|M|Y] (i.e. 1Y6M would return false)"];
  Node9 -> Node17 [color="steelblue1",style="solid"];
  Node17 [label="parseBaseStrike",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceore_1_1data.html#af07ebcb16f5c4b8f23aa841778ec1ede",tooltip="Parse a Strike from its string representation, strStrike."];
  Node9 -> Node18 [color="steelblue1",style="solid"];
  Node18 [label="parseBool",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__utilities.html#ga94621f11193864fa1338296232dc5be9",tooltip="Convert text to bool."];
  Node18 -> Node18 [color="steelblue1",style="solid"];
  Node9 -> Node19 [color="steelblue1",style="solid"];
  Node19 [label="parseCdsDocClause",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceore_1_1data.html#a4d60e66c3714d2cf33fc135d20502ccb",tooltip=" "];
  Node9 -> Node11 [color="steelblue1",style="solid"];
  Node9 -> Node20 [color="steelblue1",style="solid"];
  Node20 [label="parseDayCounter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__utilities.html#gaefb008d0de256c79140545d9c7549093",tooltip="Convert text to QuantLib::DayCounter."];
  Node9 -> Node21 [color="steelblue1",style="solid"];
  Node21 [label="parseExpiry",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceore_1_1data.html#aef9033372c401fe3ddef3c912a716d5a",tooltip="Parse an Expiry from its string representation, strExpiry."];
  Node21 -> Node11 [color="steelblue1",style="solid"];
  Node9 -> Node22 [color="steelblue1",style="solid"];
  Node22 [label="parseFxPeriod",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__marketdata.html#ga8c35268c175452bca6e2acb7ad58442d",tooltip="Convert text to QuantLib::Period of Fx forward string."];
  Node22 -> Node15 [color="steelblue1",style="solid"];
  Node9 -> Node13 [color="steelblue1",style="solid"];
  Node9 -> Node9 [color="steelblue1",style="solid"];
  Node9 -> Node15 [color="steelblue1",style="solid"];
  Node9 -> Node23 [color="steelblue1",style="solid"];
  Node23 [label="parseReal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__utilities.html#gad1db2a68f9a73667c3b4084d63955bdd",tooltip="Convert text to Real."];
  Node23 -> Node23 [color="steelblue1",style="solid"];
  Node9 -> Node24 [color="steelblue1",style="solid"];
  Node24 [label="tryParseReal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__utilities.html#ga3447951aa05e25440d0d5b7eecfce581",tooltip="Attempt to convert text to Real."];
  Node1 -> Node25 [color="steelblue1",style="solid"];
  Node25 [label="ore::data::InMemoryLoader\l::addFixing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_in_memory_loader.html#a72725b0e71ede5d4f612968d48187439",tooltip=" "];
  Node1 -> Node12 [color="steelblue1",style="solid"];
  Node1 -> Node23 [color="steelblue1",style="solid"];
}
