digraph "StructuredLoggingErrorMessage"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{StructuredLoggingErrorMessage\n||+ StructuredLoggingErrorMessage()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{StructuredMessage\n||+ StructuredMessage()\l+ StructuredMessage()\l+ ~StructuredMessage()\l+ msg()\l+ emitLog()\l# addSubFields()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_structured_message.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{JSONMessage\n||+ ~JSONMessage()\l+ msg()\l+ log()\l+ json()\l+ set()\l# emitLog()\l# jsonify()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classore_1_1data_1_1_j_s_o_n_message.html",tooltip=" "];
  Node4 -> Node3 [color="grey25",style="solid",label=" #data_" ,arrowhead="odiamond"];
  Node4 [label="{map\< std::string, boost\l::any \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node5 [label="{string\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node5 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node6 [label="{basic_string\< Char \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node4 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node7 [label="{any\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node4 [dir="back",color="orange",style="solid",label=" \< std::string, boost\l::any \>" ];
  Node8 [label="{map\< K, T \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node8 [color="grey25",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node9 [label="{K\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node8 [color="grey25",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node10 [label="{T\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node2 [color="grey25",style="solid",label=" +name" ,arrowhead="odiamond"];
  Node11 [label="{char\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
}
